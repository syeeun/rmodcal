% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.calibration.R
\name{model.calibration}
\alias{model.calibration}
\title{Assessing Risk Model Calibration with Missing Covariates}
\usage{
model.calibration(
  risk,
  ind.case,
  ind.ph2,
  incl.prob,
  survtime,
  tau = NULL,
  pseudo.risk = NULL,
  imputed.risks = NULL,
  m.ifncc = NULL
)
}
\arguments{
\item{risk}{risk values computed from a risk model to validate with a two-phase designed validation cohort. Will be used to estimate the expected number of cases. Can be a numeric vector of length \code{n} without missing components or length \code{N} with NA for the individuals with missing covariates.}

\item{ind.case}{binary outcome status (1 = case; 0 = non-case). Will be used to compute the observed number of cases. This should be a vector of length \code{N}.}

\item{ind.ph2}{binary phase 2 inclusion indicators (1 = included; 0 = not included). This should be a vector of length \code{N}.}

\item{incl.prob}{phase 2 inclusion probabilities. This should be a vector of length \code{N}.}

\item{survtime}{follow-up times (i.e., time to event where event can be either case or loss to follow-up due to administrative censoring or other causes). This should be a vector of length \code{N}.}

\item{tau}{risk projection time used to compute \code{risk}. The observed number of cases will be computed only up to this projection time. If NULL, risk is projected up to the maximum of \code{survtime}.}

\item{pseudo.risk}{pseudo risk values computed from a risk model to validate with a validation cohort where missing covariates are substituted by predicted values e.g., using \code{\link{glm}}.  Will be used as auxiliary statistics for weight adjustment using \code{\link{calib}}. This should be a numeric vector of length \code{N}.}

\item{imputed.risks}{multiple-imputed risk values e.g., by \code{\link{mice}}. This should be an \code{N} x \code{K} matrix where \code{K} is the number of imputations.}

\item{m.ifncc}{number of sampled controls per case if missing is by nested case-control samplign designs. Default is NULL.}
}
\value{
estimates and standard errors of the ratio of observed and expected number of cases using inverse probability weights, pseudo risk-adjusted weights (if \code{pseudo.risk} is not NULL), and multiple imputations (if \code{imputed.risks} is not NULL).
}
\description{
Assess risk model calibration using a ratio of observed to expected number of cases
where some risk model covariates are missing due to two-phase sampling designs such as case-cohort or nested case-control designs. 
Default is to use inverse probability weights (also known as sampling weights, survey weights, or designs weights).
Can use adjusted weights where the adjusted-weighted sum and the total sum are equal for pseudo risk values (using \code{\link{calib}}).
Can also compare with multiple imputation approach (e.g., \code{\link{mice}}). 
Standard errors are provided for any available approaches.
}
\examples{
#### Assessing Calibration of Pure Cumulative Risk Model using Example Two-phased Validation Data ####
tau = 30 # tau can range from 0 to 50 for the example data
data_valid.hat = data_valid
data_valid.hat$eventime = pmin(tau, data_valid$eventime)
# Risk Values in Phase 2
# library(survival)
rhat = predict(riskmod, newdata = data_valid.hat, type = "expected")

# Pseudo-risk Values in Phase 1 using Predicted Exposure Z
predmod = glm(Z ~ X + Uz, family = gaussian, data = data_valid, weights = wgt, subset = (ind.ph2==1))
data_valid.hat$Z = predict(predmod, data_valid, type = "response") 
prisk = predict(riskmod, newdata = data_valid.hat, type = "expected")

# Imputed Risk Values in Phase 1 using MICE
# library(mice)
data_valid.tilde = data_valid
data_valid.tilde$logT = log(data_valid.tilde$eventime)
ini = mice(data_valid.tilde, max = 0, print = FALSE)
ini$predictorMatrix[c("Z"), ] <- 0
ini$predictorMatrix["Z", c("X", "Uz", "logT", "ind.fail")] <- 1
miceobj = mice(data_valid.tilde, meth = ini$meth, pred = ini$predictorMatrix, seed = 2, m = 5, maxit = 5, print = F)
predmice = with(miceobj, predict(riskmod, newdata = data.frame(eventime = pmin(tau, eventime), ind.fail, X, Z), type = "expected"))
irisk = simplify2array(predmice$analyses)

# Assessing Model Calibration 
res = model.calibration(risk = rhat, 
ind.case = data_valid$ind.fail, 
ind.ph2 = data_valid$ind.ph2, 
incl.prob = data_valid$incl.prob,
survtime = data_valid$eventime,
tau = tau,
pseudo.risk = prisk,
imputed.risks = irisk)

print(round(res, 3))

}
\seealso{
\code{\link{data_valid}}, \code{\link{riskmod}}
}
\keyword{ModelCal}
